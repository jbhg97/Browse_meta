---
title: "Mammal browsing control meta-analysis results"
author: "Jamie and Dan"
format: html
editor: visual
---

# Non-lethal mammal control Meta analysis - Models

```{r}
library(pacman)
devtools::install_github("daniel1noble/orchaRd", ref = "main", force = TRUE)
p_load(tidyverse, readxl, writexl, kableExtra, orchaRd, clubSandwich, metafor, mice, orchaRd, here)
```

## Complete case analysis

### Plant scale

Read in

```{r}
df_comp_plant <- read_xlsx(here("Analysis", "Comp_all_plant.xlsx"))

#add an observation level factor
df_comp_plant <- df_comp_plant %>% mutate(OLRE = row_number())
```

#### Variance Covariance matrix

Use the shared data column to build a VCV matrix to be used in all models.

```{r}
VCV_mat_plant <- vcalc(vi = Sampling_variance, cluster = Shared_data, data = df_comp_plant, rho = 0.5, nearpd = TRUE)
```

#### Multilevel Meta-analytic model

```{r}
plant_MMA_mod1 <- rma.mv(Effect_size ~ 1, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant)

summary(plant_MMA_mod1)

orchaRd::i2_ml(plant_MMA_mod1)
```

Visualise the overall effect

```{r}
orchard_plot(plant_MMA_mod1, group = "Paper_ID", xlab = "SMD")
```


#### Multilevel Meta-regression models

```{r}
plant_MR_mod1 <- rma.mv(Effect_size ~ Method + Plot_size, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant)
summary(plant_MR_mod1)

plant_MR_mod2 <- rma.mv(Effect_size ~ -1 + Method + Plot_size, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant) #suppressed intercept
summary(plant_MR_mod2)

plant_MR_mod3 <- rma.mv(Effect_size ~ Animal + Plot_size, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant)
summary(plant_MR_mod3)

plant_MR_mod4 <- rma.mv(Effect_size ~ -1 + Animal + Plot_size, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant)
summary(plant_MR_mod4)

plant_MR_mod5<- rma.mv(Effect_size ~ Method * Months + Plot_size, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant)
summary(plant_MR_mod5)
```

#### Orchard plots

```{r}
orchard_plot(plant_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD")
mod_results(plant_MR_mod1, mod = "Method", group = "Paper_ID")

orchard_plot(plant_MR_mod3, mod = "Animal", group = "Paper_ID", xlab = "SMD")
mod_results(plant_MR_mod3, mod = "Animal", group = "Paper_ID")

plant_MR5_bub <- mod_results(plant_MR_mod5, mod = "Months", group = "Paper_ID", by = "Method")
bubble_plot(plant_MR5_bub, mod = "Months", group = "Paper_ID", xlab = "Months")
```

#### Non-independence sensitivity

```{r}
plant_MR_mod1_rob <- robust(plant_MR_mod1, cluster = df_comp_plant$Paper_ID)
summary(plant_MR_mod1_rob)

plant_MR_mod3_rob <- robust(plant_MR_mod3, cluster = df_comp_plant$Paper_ID)
summary(plant_MR_mod3_rob)

plant_MR_mod5_rob <- robust(plant_MR_mod5, cluster = df_comp_plant$Paper_ID)
summary(plant_MR_mod5_rob)
```

#### Sensitivity plots

Is there a discrepancy between data that were transformed? Or data that were converted from log odds.

```{r}
ggplot(df_comp_plant, aes(Effect_size, Sampling_variance, colour = Trans)) + geom_point() + theme_bw()

ggplot(df_comp_plant, aes(Effect_size, Sampling_variance, colour = Effect_type)) + geom_point() + theme_bw()
```

#### Publication bias

##### Funnel plots

Will need to use the effective sample size rather than the precision due to the correlation between sampling variance (used to derive precision) and SMD effect size.

```{r}
df_comp_plant1 <- df_comp_plant %>% mutate(Eff_SS = (4*(Con_N*Trt_N)) / (Con_N + Trt_N))
```

```{r}
funnel(df_comp_plant1$Effect_size, df_comp_plant1$Sampling_variance, ni = df_comp_plant1$Eff_SS, yaxis="ni",
       ylab = "Effective sample size",
       xlab = "Effect size (SMD)") 
```

##### Meta-regression

```{r}
#centre the publication year
#calculate sqrt inverse effective sample size
df_comp_plant2 <- df_comp_plant1 %>% mutate(Year = Year - mean(Year),
                                            root_inv_ESS = sqrt((Con_N + Trt_N)/(Con_N*Trt_N)) )
```

```{r}
plant_MMA_pb1 <- rma.mv(Effect_size, V = VCV_mat_plant, mods = ~ 1 + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant2)
summary(plant_MMA_pb1)
```

```{r}
plant_MR_pb1 <- rma.mv(Effect_size, V = VCV_mat_plant, mods = ~ Method + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant2)
summary(plant_MR_pb1)

plant_MR_pb3 <- rma.mv(Effect_size, V = VCV_mat_plant, mods = ~ Animal + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant2)
summary(plant_MR_pb3)

plant_MR_pb5 <- rma.mv(Effect_size, V = VCV_mat_plant, mods = ~ Method * Months + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_plant2)
summary(plant_MR_pb5)
```

#### Save objects

```{r}
saveRDS(plant_MMA_mod1, here("Results", "Models", "Plant", "Plant_MMA.rds"))
saveRDS(plant_MMA_pb1, here("Results", "Models", "Plant", "Plant_MMA_pb.rds"))
saveRDS(plant_MR_mod1, here("Results", "Models", "Plant", "Plant_MR1.rds"))
saveRDS(plant_MR_mod2, here("Results", "Models", "Plant", "Plant_MR2.rds"))
saveRDS(plant_MR_mod3, here("Results", "Models", "Plant", "Plant_MR3.rds"))
saveRDS(plant_MR_mod4, here("Results", "Models", "Plant", "Plant_MR4.rds"))
saveRDS(plant_MR_mod5, here("Results", "Models", "Plant", "Plant_MR5.rds"))
saveRDS(plant_MR_pb1, here("Results", "Models", "Plant", "Plant_MR1_pb.rds"))
saveRDS(plant_MR_pb3, here("Results", "Models", "Plant", "Plant_MR3_pb.rds"))
saveRDS(plant_MR_pb5, here("Results", "Models", "Plant", "Plant_MR5_pb.rds"))
```

### Coupe scale

Read in

```{r}
df_comp_coupe <- read_xlsx(here("Analysis", "Comp_all_coupe.xlsx")) 

#add an observation level factor
df_comp_coupe <- df_comp_coupe %>% mutate(OLRE = row_number())
```

#### Variance Covariance matrix

```{r}
VCV_mat_coupe <- vcalc(vi = Sampling_variance, cluster = Shared_data, data = df_comp_coupe, rho = 0.5, nearpd = TRUE)
```

#### Multilevel Meta-analytic model

```{r}
coupe_MMA_mod1 <- rma.mv(Effect_size ~ 1, V = VCV_mat_coupe, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe)

summary(coupe_MMA_mod1)

orchaRd::i2_ml(coupe_MMA_mod1)
```

Visualise the overall effect

```{r}
orchard_plot(coupe_MMA_mod1, group = "Paper_ID", xlab = "SMD")
```

#### Multilevel Meta-regression models

```{r}
#subset out guardian animal - too few effects (3 - same study) for it to go into models
df_comp_coupe1 <- df_comp_coupe %>% filter(!(Method == "Guardian animal"))
VCV_mat_coupe1 <- vcalc(vi = Sampling_variance, cluster = Shared_data, data = df_comp_coupe1, rho = 0.5, nearpd = TRUE)

coupe_MR_mod1 <- rma.mv(Effect_size ~ Method + Plot_size, V = VCV_mat_coupe1, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe1)
summary(coupe_MR_mod1)

coupe_MR_mod2 <- rma.mv(Effect_size ~ -1 + Method + Plot_size, V = VCV_mat_coupe1, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe1) #suppressed intercept
summary(coupe_MR_mod2)

coupe_MR_mod3 <- rma.mv(Effect_size ~ Animal + Plot_size, V = VCV_mat_coupe, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe)
summary(coupe_MR_mod3)

coupe_MR_mod4 <- rma.mv(Effect_size ~ -1 + Animal + Plot_size, V = VCV_mat_coupe, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe)
summary(coupe_MR_mod4)

coupe_MR_mod5<- rma.mv(Effect_size ~ Method * Months + Plot_size, V = VCV_mat_coupe1, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe1)
summary(coupe_MR_mod5)
```

#### Orchard plots

```{r}
orchard_plot(coupe_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD", angle = 0, legend.pos = "top.left")
mod_results(coupe_MR_mod1, mod = "Method", group = "Paper_ID")

orchard_plot(coupe_MR_mod3, mod = "Animal", group = "Paper_ID", xlab = "SMD", angle = 0)
mod_results(coupe_MR_mod3, mod = "Animal", group = "Paper_ID")

coupe_MR5_bub <- mod_results(coupe_MR_mod5, mod = "Months", group = "Paper_ID", by = "Method")
bubble_plot(coupe_MR5_bub, mod = "Months", group = "Paper_ID", xlab = "Months", legend.pos = "bottom.right") 
```

#### Non-independence sensitivity

```{r}
coupe_MR_mod1_rob <- robust(coupe_MR_mod1, cluster = df_comp_coupe1$Paper_ID)
summary(coupe_MR_mod1_rob)

coupe_MR_mod3_rob <- robust(coupe_MR_mod3, cluster = df_comp_coupe$Paper_ID)
summary(coupe_MR_mod3_rob)

coupe_MR_mod5_rob <- robust(coupe_MR_mod5, cluster = df_comp_coupe1$Paper_ID)
summary(coupe_MR_mod5_rob)
```

#### Sensitivity plots

Is there a discrepancy between data that were transformed? Or data that were converted from log odds.

```{r}
ggplot(df_comp_coupe, aes(Effect_size, Sampling_variance, colour = Trans)) + geom_point() + theme_bw()

ggplot(df_comp_coupe, aes(Effect_size, Sampling_variance, colour = Effect_type)) + geom_point() + theme_bw()
```

#### Publication bias

##### Funnel plots

Will need to use the effective sample size rather than the precision due to the correlation between sampling variance (used to derive precision) and SMD effect size.

```{r}
df_comp_coupe2 <- df_comp_coupe %>% mutate(Eff_SS = (4*(Con_N*Trt_N)) / (Con_N + Trt_N))
```

```{r}
funnel(df_comp_coupe2$Effect_size, df_comp_coupe2$Sampling_variance, ni = df_comp_coupe2$Eff_SS, yaxis="ni",
       ylab = "Effective sample size",
       xlab = "Effect size (SMD)") 
```

##### Meta-regression

```{r}
#centre the publication year
#calculate sqrt inverse effective sample size
df_comp_coupe3 <- df_comp_coupe2 %>% mutate(Year = Year - mean(Year),
                                            root_inv_ESS = sqrt((Con_N + Trt_N)/(Con_N*Trt_N)) )

#subset version for some models
df_comp_coupe4 <- df_comp_coupe1 %>% mutate(Year = Year - mean(Year),
                                            root_inv_ESS = sqrt((Con_N + Trt_N)/(Con_N*Trt_N)) )
```

```{r}
coupe_MMA_pb1 <- rma.mv(Effect_size, V = VCV_mat_coupe, mods = ~ 1 + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe3)
summary(coupe_MMA_pb1)
```

```{r}
coupe_MR_pb1 <- rma.mv(Effect_size, V = VCV_mat_coupe1, mods = ~ Method + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe4)
summary(coupe_MR_pb1)

coupe_MR_pb3 <- rma.mv(Effect_size, V = VCV_mat_coupe, mods = ~ Animal + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe3)
summary(coupe_MR_pb3)

coupe_MR_pb5 <- rma.mv(Effect_size, V = VCV_mat_coupe1, mods = ~ Method * Months + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_coupe4)
summary(coupe_MR_pb5)
```

#### Save objects

```{r}
saveRDS(coupe_MMA_mod1, here("Results", "Models", "Coupe", "coupe_MMA.rds"))
saveRDS(coupe_MMA_pb1, here("Results", "Models", "Coupe", "coupe_MMA_pb.rds"))
saveRDS(coupe_MR_mod1, here("Results", "Models", "Coupe", "coupe_MR1.rds"))
saveRDS(coupe_MR_mod2, here("Results", "Models", "Coupe", "coupe_MR2.rds"))
saveRDS(coupe_MR_mod3, here("Results", "Models", "Coupe", "coupe_MR3.rds"))
saveRDS(coupe_MR_mod4, here("Results", "Models", "Coupe", "coupe_MR4.rds"))
saveRDS(coupe_MR_mod5, here("Results", "Models", "Coupe", "coupe_MR5.rds"))
saveRDS(coupe_MR_pb1, here("Results", "Models", "Coupe", "coupe_MR1_pb.rds"))
saveRDS(coupe_MR_pb3, here("Results", "Models", "Coupe", "coupe_MR3_pb.rds"))
saveRDS(coupe_MR_pb5, here("Results", "Models", "Coupe", "coupe_MR5_pb.rds"))
```

### Landscape scale

Read in

```{r}
df_comp_lscape <- read_xlsx(here("Analysis", "Comp_all_lscape.xlsx")) 

#add an observation level factor
df_comp_lscape <- df_comp_lscape %>% mutate(OLRE = row_number())
```

#### Variance Covariance matrix

```{r}
VCV_mat_lscape <- vcalc(vi = Sampling_variance, cluster = Shared_data, data = df_comp_lscape, rho = 0.5, nearpd = TRUE)
```

#### Multilevel Meta-analytic model

```{r}
lscape_MMA_mod1 <- rma.mv(Effect_size ~ 1, V = VCV_mat_lscape, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape)

summary(lscape_MMA_mod1)

orchaRd::i2_ml(lscape_MMA_mod1)
```

Visualise the overall effect

```{r}
orchard_plot(lscape_MMA_mod1, group = "Paper_ID", xlab = "SMD")
```

#### Multilevel Meta-regression models

```{r}
lscape_MR_mod1 <- rma.mv(Effect_size ~ Method + Plot_size, V = VCV_mat_lscape, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape)
summary(lscape_MR_mod1)

lscape_MR_mod2 <- rma.mv(Effect_size ~ -1 + Method + Plot_size, V = VCV_mat_lscape, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape) #suppressed intercept
summary(lscape_MR_mod2)

lscape_MR_mod3 <- rma.mv(Effect_size ~ Animal + Plot_size, V = VCV_mat_lscape, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape)
summary(lscape_MR_mod3)

lscape_MR_mod4 <- rma.mv(Effect_size ~ -1 + Animal + Plot_size, V = VCV_mat_lscape, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape)
summary(lscape_MR_mod4)

# last model spits warnings and then errors later due to coolinearity - other fencing has no variation when months NAs are removed. Removing it removes the warnings of dropping redundant predictors. Need to make a new VCV matrix with the reduced sample size.

# will probably need to drop this after the inclusion of the follow up search effects

df_comp_lscape1 <- df_comp_lscape %>% filter(!(Method == "Other fencing" | Method == "Neighbour effects" | Method == "Stock manipulation"))

VCV_mat_lscape1 <- vcalc(vi = Sampling_variance, cluster = Shared_data, data = df_comp_lscape1, rho = 0.5, nearpd = TRUE)

lscape_MR_mod5<- rma.mv(Effect_size ~ Method * Months + Plot_size, V = VCV_mat_lscape1, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape1)
summary(lscape_MR_mod5)
```

#### Orchard plots

```{r}
orchard_plot(lscape_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD", angle = 0)
mod_results(lscape_MR_mod1, mod = "Method", group = "Paper_ID")

orchard_plot(lscape_MR_mod3, mod = "Animal", group = "Paper_ID", xlab = "SMD", angle = 0)
mod_results(lscape_MR_mod3, mod = "Animal", group = "Paper_ID")

lscape_MR5_bub <- mod_results(lscape_MR_mod5, mod = "Months", group = "Paper_ID", by = "Method")
bubble_plot(lscape_MR5_bub, mod = "Months", group = "Paper_ID", xlab = "Months", legend.pos = "bottom.right")
```

#### Non-independence sensitivity

```{r}
lscape_MR_mod1_rob <- robust(lscape_MR_mod1, cluster = df_comp_lscape$Paper_ID)
summary(lscape_MR_mod1_rob)

lscape_MR_mod3_rob <- robust(lscape_MR_mod3, cluster = df_comp_lscape$Paper_ID)
summary(lscape_MR_mod3_rob)

lscape_MR_mod5_rob <- robust(lscape_MR_mod5, cluster = df_comp_lscape1$Paper_ID)
summary(lscape_MR_mod5_rob)
```

#### Sensitivity plots

Is there a discrepancy between data that were transformed? Or data that were converted from log odds?

```{r}
ggplot(df_comp_lscape, aes(Effect_size, Sampling_variance, colour = Trans)) + geom_point() + theme_bw() 

ggplot(df_comp_lscape, aes(Effect_size, Sampling_variance, colour = Effect_type)) + geom_point() + theme_bw()
```

#### Publication bias

##### Funnel plots

Will need to use the effective sample size rather than the precision due to the correlation between sampling variance (used to derive precision) and SMD effect size.

```{r}
df_comp_lscape_pb <- df_comp_lscape %>% mutate(Eff_SS = (4*(Con_N*Trt_N)) / (Con_N + Trt_N))
```

```{r}
funnel(df_comp_lscape_pb$Effect_size, df_comp_lscape_pb$Sampling_variance, ni = df_comp_lscape_pb$Eff_SS, yaxis="ni",
       ylab = "Effective sample size",
       xlab = "Effect size (SMD)") 
```

##### Meta-regression

```{r}
#centre the publication year
#calculate sqrt inverse effective sample size
df_comp_lscape_pb2 <- df_comp_lscape %>% mutate(Year = Year - mean(Year), 
                                                root_inv_ESS = sqrt((Con_N + Trt_N)/(Con_N*Trt_N)) )

#subset version for MR mod 5
df_comp_lscape_pb3 <- df_comp_lscape1 %>% mutate(Year = Year - mean(Year), 
                                                 root_inv_ESS = sqrt((Con_N + Trt_N)/(Con_N*Trt_N)) )
```

```{r}
lscape_MMA_pb1 <- rma.mv(Effect_size, V = VCV_mat_lscape, mods = ~ 1 + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape_pb2)
summary(lscape_MMA_pb1)
```

```{r}
lscape_MR_pb1 <- rma.mv(Effect_size, V = VCV_mat_lscape, mods = ~ Method + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape_pb2)
summary(lscape_MR_pb1)

lscape_MR_pb3 <- rma.mv(Effect_size, V = VCV_mat_lscape, mods = ~ Animal + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape_pb2)
summary(lscape_MR_pb3)

lscape_MR_pb5 <- rma.mv(Effect_size, V = VCV_mat_lscape1, mods = ~ Method * Months + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_comp_lscape_pb3)
summary(lscape_MR_pb5)
```

#### Save objects

```{r}
saveRDS(lscape_MMA_mod1, here("Results", "Models", "Landscape", "lscape_MMA.rds"))
saveRDS(lscape_MMA_pb1, here("Results", "Models", "Landscape", "lscape_MMA_pb.rds"))
saveRDS(lscape_MR_mod1, here("Results", "Models", "Landscape", "lscape_MR1.rds"))
saveRDS(lscape_MR_mod2, here("Results", "Models", "Landscape", "lscape_MR2.rds"))
saveRDS(lscape_MR_mod3, here("Results", "Models", "Landscape", "lscape_MR3.rds"))
saveRDS(lscape_MR_mod4, here("Results", "Models", "Landscape", "lscape_MR4.rds"))
saveRDS(lscape_MR_mod5, here("Results", "Models", "Landscape", "lscape_MR5.rds"))
saveRDS(lscape_MR_pb1, here("Results", "Models", "Landscape", "lscape_MR1_pb.rds"))
saveRDS(lscape_MR_pb3, here("Results", "Models", "Landscape", "lscape_MR3_pb.rds"))
saveRDS(lscape_MR_pb5, here("Results", "Models", "Landscape", "lscape_MR5_pb.rds"))
```

```{r}
# clear memory
rm(list = ls())
```

## Imputed case analysis

### Plant scale

Read in

```{r}
df_imp_plant <- readRDS(here("Analysis", "Imp_all_plant.rds"))

# Add an observation level random effect
df_imp_plant1 <- lapply(df_imp_plant, function(df){ 
  df %>% mutate(OLRE = row_number()) })
```

#### Variance Covariance matrices

```{r}
VCV_mat_plant_imp <- lapply(df_imp_plant1, function(df){
  vcalc(vi = Sampling_variance, cluster = Shared_data, data = df, rho = 0.5, nearpd = TRUE) })
```

#### Multilevel Meta-analytic model

```{r}
imp_plant_MMA_mod1 <- list()

for (i in seq_along(df_imp_plant1)) { 
  imp_plant_MMA_mod1[[i]] <- rma.mv(Effect_size ~ 1, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant1[[i]]) }

imp_plant_MMA_pool1 <- summary(pool(imp_plant_MMA_mod1))
print(imp_plant_MMA_pool1)

#orchaRd::i2_ml(imp_plant_MMA_pool1) #this will work on any of the frames in the imp_plant_MMA_mod1 list but not on the pooled
```

#### Multilevel Meta-regression models

```{r}
imp_plant_MR_mod1 <- list()
for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod1[[i]] <- rma.mv(Effect_size ~ Method + Plot_size, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant1[[i]]) }
summary(pool(imp_plant_MR_mod1))

imp_plant_MR_mod2 <- list()
for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod2[[i]] <- rma.mv(Effect_size ~ -1 + Method + Plot_size, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant1[[i]]) }
summary(pool(imp_plant_MR_mod2))

imp_plant_MR_mod3 <- list()
for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod3[[i]] <- rma.mv(Effect_size ~ Animal + Plot_size, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant1[[i]]) }
summary(pool(imp_plant_MR_mod3))

imp_plant_MR_mod4 <- list()
for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod4[[i]] <- rma.mv(Effect_size ~ -1 + Animal + Plot_size, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant1[[i]]) }
summary(pool(imp_plant_MR_mod4))

imp_plant_MR_mod5 <- list()
for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod5[[i]] <- rma.mv(Effect_size ~ Method * Months + Plot_size, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant1[[i]]) }
summary(pool(imp_plant_MR_mod5))
```

#### Non-independence sensitivity

```{r}
imp_plant_MR_mod1_rob <- list()

for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod1_rob[[i]] <- robust(imp_plant_MR_mod1[[i]], cluster = df_imp_plant[[i]]$Paper_ID) }

summary(pool(imp_plant_MR_mod1_rob))

imp_plant_MR_mod3_rob <- list()

for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod3_rob[[i]] <- robust(imp_plant_MR_mod3[[i]], cluster = df_imp_plant[[i]]$Paper_ID) }

summary(pool(imp_plant_MR_mod3_rob))

imp_plant_MR_mod5_rob <- list()

for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod5_rob[[i]] <- robust(imp_plant_MR_mod5[[i]], cluster = df_imp_plant[[i]]$Paper_ID) }

summary(pool(imp_plant_MR_mod5_rob))
```

#### Publication bias

##### Meta-regression

```{r}
#centre the publication year
#calculate sqrt inverse effective sample size

df_imp_plant2 <- lapply(df_imp_plant1, function(df){ 
  df %>% mutate(Year = Year - mean(Year), 
                root_inv_ESS = sqrt((Con_N + Trt_N)/(Con_N*Trt_N)) ) })
```

```{r}
imp_plant_MMA_pb1 <- list()
for (i in seq_along(df_imp_plant2)) {
  imp_plant_MMA_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_plant_imp[[i]], mods = ~ 1 + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant2[[i]], verbose = TRUE) }
summary(pool(imp_plant_MMA_pb1))
```

```{r}
imp_plant_MR_pb1 <- list()
for (i in seq_along(df_imp_plant2)) {
  imp_plant_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_plant_imp[[i]], mods = ~ Method + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant2[[i]], verbose = TRUE) }
summary(pool(imp_plant_MR_pb1))

imp_plant_MR_pb3 <- list()
for (i in seq_along(df_imp_plant2)) {
  imp_plant_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_plant_imp[[i]], mods = ~ Animal + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant2[[i]], verbose = TRUE) }
summary(pool(imp_plant_MR_pb3))

imp_plant_MR_pb5 <- list()
for (i in seq_along(df_imp_plant2)) {
  imp_plant_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_plant_imp[[i]], mods = ~ Method * Months + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_plant2[[i]], verbose = TRUE) }
summary(pool(imp_plant_MR_pb5))
```

#### Save objects

```{r}
saveRDS(imp_plant_MMA_mod1, here("Results", "Models", "Plant", "imp_Plant_MMA.rds"))
saveRDS(imp_plant_MMA_pb1, here("Results", "Models", "Plant", "imp_Plant_MMA_pb1.rds"))
saveRDS(imp_plant_MR_mod1, here("Results", "Models", "Plant", "imp_Plant_MR1.rds"))
saveRDS(imp_plant_MR_mod2, here("Results", "Models", "Plant", "imp_Plant_MR2.rds"))
saveRDS(imp_plant_MR_mod3, here("Results", "Models", "Plant", "imp_Plant_MR3.rds"))
saveRDS(imp_plant_MR_mod4, here("Results", "Models", "Plant", "imp_Plant_MR4.rds"))
saveRDS(imp_plant_MR_mod5, here("Results", "Models", "Plant", "imp_Plant_MR5.rds"))
saveRDS(imp_plant_MR_pb1, here("Results", "Models", "Plant", "imp_Plant_MR_pb1.rds"))
saveRDS(imp_plant_MR_pb3, here("Results", "Models", "Plant", "imp_Plant_MR_pb3.rds"))
saveRDS(imp_plant_MR_pb5, here("Results", "Models", "Plant", "imp_Plant_MR_pb5.rds"))
```

```{r}
rm(list = ls())
```

### Coupe scale

Read in

```{r}
df_imp_coupe <- readRDS(here("Analysis", "Imp_all_coupe.rds"))

# Add an observation level random effect
df_imp_coupe1 <- lapply(df_imp_coupe, function(df){ 
  df %>% mutate(OLRE = row_number()) })
```

#### Variance Covariance matrices

```{r}
VCV_mat_coupe_imp <- lapply(df_imp_coupe1, function(df){
  vcalc(vi = Sampling_variance, cluster = Shared_data, data = df, rho = 0.5, nearpd = TRUE) })
```

#### Multilevel Meta-analytic model

```{r}
imp_coupe_MMA_mod1 <- list()

for (i in seq_along(df_imp_coupe1)) { 
  imp_coupe_MMA_mod1[[i]] <- rma.mv(Effect_size ~ 1, V = VCV_mat_coupe_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe1[[i]], verbose = TRUE) }

imp_coupe_MMA_pool1 <- summary(pool(imp_coupe_MMA_mod1))
print(imp_coupe_MMA_pool1)

#orchaRd::i2_ml(imp_coupe_MMA_pool1) #this will work on any of the frames in the imp_coupe_MMA_mod1 list but not on the pooled
```

#### Multilevel Meta-regression models

```{r}
#subset to remove guardian animal - too few effects to model reliably
df_imp_coupe2 <- lapply(df_imp_coupe, function(df){ 
  df %>% filter(!(Method == "Guardian animal")) })

VCV_mat_coupe_imp1 <- lapply(df_imp_coupe2, function(df){
  vcalc(vi = Sampling_variance, cluster = Shared_data, data = df, rho = 0.5, nearpd = TRUE) })

imp_coupe_MR_mod1 <- list()
for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod1[[i]] <- rma.mv(Effect_size ~ Method + Plot_size, V = VCV_mat_coupe_imp1[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe2[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MR_mod1))

imp_coupe_MR_mod2 <- list()
for (i in seq_along(df_imp_coupe2)) {
  imp_coupe_MR_mod2[[i]] <- rma.mv(Effect_size ~ -1 + Method + Plot_size, V = VCV_mat_coupe_imp1[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe1[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MR_mod2))

imp_coupe_MR_mod3 <- list()
for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod3[[i]] <- rma.mv(Effect_size ~ Animal + Plot_size, V = VCV_mat_coupe_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe1[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MR_mod3))

imp_coupe_MR_mod4 <- list()
for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod4[[i]] <- rma.mv(Effect_size ~ -1 + Animal + Plot_size, V = VCV_mat_coupe_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe1[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MR_mod4))

imp_coupe_MR_mod5 <- list()
for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod5[[i]] <- rma.mv(Effect_size ~ Method * Months + Plot_size, V = VCV_mat_coupe_imp1[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe2[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MR_mod5))
```

#### Non-independence sensitivity

```{r}
imp_coupe_MR_mod1_rob <- list()

for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod1_rob[[i]] <- robust(imp_coupe_MR_mod1[[i]], cluster = df_imp_coupe[[i]]$Paper_ID) }

summary(pool(imp_coupe_MR_mod1_rob))

imp_plant_MR_mod3_rob <- list()

for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod3_rob[[i]] <- robust(imp_coupe_MR_mod3[[i]], cluster = df_imp_coupe[[i]]$Paper_ID) }

summary(pool(imp_coupe_MR_mod3_rob))

imp_coupe_MR_mod5_rob <- list()

for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod5_rob[[i]] <- robust(imp_coupe_MR_mod5[[i]], cluster = df_imp_coupe[[i]]$Paper_ID) }

summary(pool(imp_coupe_MR_mod5_rob))
```

#### Publication bias

##### Meta-regression

```{r}
#centre the publication year
#calculate sqrt inverse effective sample size

df_imp_coupe2 <- lapply(df_imp_coupe1, function(df){ 
  df %>% mutate(Year = Year - mean(Year), 
                root_inv_ESS = sqrt((Con_N + Trt_N)/(Con_N*Trt_N)) ) })
```

```{r}
imp_coupe_MMA_pb1 <- list()
for (i in seq_along(df_imp_coupe2)) {
  imp_coupe_MMA_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_coupe_imp[[i]], mods = ~ 1 + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe2[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MMA_pb1))
```

```{r}
imp_coupe_MR_pb1 <- list()
for (i in seq_along(df_imp_coupe2)) {
  imp_coupe_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_coupe_imp[[i]], mods = ~ Method + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe2[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MR_pb1))

imp_coupe_MR_pb3 <- list()
for (i in seq_along(df_imp_coupe2)) {
  imp_coupe_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_coupe_imp[[i]], mods = ~ Animal + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe2[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MR_pb3))

imp_coupe_MR_pb5 <- list()
for (i in seq_along(df_imp_coupe2)) {
  imp_coupe_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_coupe_imp[[i]], mods = ~ Method * Months + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_coupe2[[i]], verbose = TRUE) }
summary(pool(imp_coupe_MR_pb5))
```

#### Save objects

```{r}
saveRDS(imp_coupe_MMA_mod1, here("Results", "Models", "Coupe", "imp_coupe_MMA.rds"))
saveRDS(imp_coupe_MMA_pb1, here("Results", "Models", "Coupe", "imp_coupe_MMA_pb1.rds"))
saveRDS(imp_coupe_MR_mod1, here("Results", "Models", "Coupe", "imp_coupe_MR1.rds"))
saveRDS(imp_coupe_MR_mod2, here("Results", "Models", "Coupe", "imp_coupe_MR2.rds"))
saveRDS(imp_coupe_MR_mod3, here("Results", "Models", "Coupe", "imp_coupe_MR3.rds"))
saveRDS(imp_coupe_MR_mod4, here("Results", "Models", "Coupe", "imp_coupe_MR4.rds"))
saveRDS(imp_coupe_MR_mod5, here("Results", "Models", "Coupe", "imp_coupe_MR5.rds"))
saveRDS(imp_coupe_MR_pb1, here("Results", "Models", "Coupe", "imp_coupe_MR_pb1.rds"))
saveRDS(imp_coupe_MR_pb3, here("Results", "Models", "Coupe", "imp_coupe_MR_pb3.rds"))
saveRDS(imp_coupe_MR_pb5, here("Results", "Models", "Coupe", "imp_coupe_MR_pb5.rds"))
```

```{r}
rm(list = ls())
```

### Landscape scale

Read in

```{r}
df_imp_lscape <- readRDS(here("Analysis", "Imp_all_lscape.rds"))

# Add an observation level random effect
df_imp_lscape1 <- lapply(df_imp_lscape, function(df){ 
  df %>% mutate(OLRE = row_number()) })
```

#### Variance Covariance matrices

```{r}
VCV_mat_lscape_imp <- lapply(df_imp_lscape1, function(df){
  vcalc(vi = Sampling_variance, cluster = Shared_data, data = df, rho = 0.5, nearpd = TRUE) })
```

#### Multilevel Meta-analytic model

```{r}
imp_lscape_MMA_mod1 <- list()

for (i in seq_along(df_imp_lscape1)) { 
  imp_lscape_MMA_mod1[[i]] <- rma.mv(Effect_size ~ 1, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape1[[i]], verbose = TRUE) }

imp_lscape_MMA_pool1 <- summary(pool(imp_lscape_MMA_mod1))
print(imp_lscape_MMA_pool1)

#orchaRd::i2_ml(imp_lscape_MMA_pool1) #this will work on any of the frames in the imp_lscape_MMA_mod1 list but not on the pooled
```

#### Multilevel Meta-regression models

```{r}
imp_lscape_MR_mod1 <- list()
for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod1[[i]] <- rma.mv(Effect_size ~ Method + Plot_size, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape1[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MR_mod1))

imp_lscape_MR_mod2 <- list()
for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod2[[i]] <- rma.mv(Effect_size ~ -1 + Method + Plot_size, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape1[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MR_mod2))

imp_lscape_MR_mod3 <- list()
for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod3[[i]] <- rma.mv(Effect_size ~ Animal + Plot_size, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape1[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MR_mod3))

imp_lscape_MR_mod4 <- list()
for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod4[[i]] <- rma.mv(Effect_size ~ -1 + Animal + Plot_size, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape1[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MR_mod4))

imp_lscape_MR_mod5 <- list()
for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod5[[i]] <- rma.mv(Effect_size ~ Method * Months + Plot_size, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape1[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MR_mod5))
```

#### Non-independence sensitivity

```{r}
imp_lscape_MR_mod1_rob <- list()

for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod1_rob[[i]] <- robust(imp_lscape_MR_mod1[[i]], cluster = df_imp_lscape[[i]]$Paper_ID) }

summary(pool(imp_lscape_MR_mod1_rob))

imp_lscape_MR_mod3_rob <- list()

for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod3_rob[[i]] <- robust(imp_lscape_MR_mod3[[i]], cluster = df_imp_lscape[[i]]$Paper_ID) }

summary(pool(imp_lscape_MR_mod3_rob))

imp_lscape_MR_mod5_rob <- list()

for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod5_rob[[i]] <- robust(imp_lscape_MR_mod5[[i]], cluster = df_imp_lscape[[i]]$Paper_ID) }

summary(pool(imp_lscape_MR_mod5_rob))
```

#### Publication bias

##### Meta-regression

```{r}
#centre the publication year
#calculate sqrt inverse effective sample size

df_imp_lscape2 <- lapply(df_imp_lscape1, function(df){ 
  df %>% mutate(Year = Year - mean(Year), 
                root_inv_ESS = sqrt((Con_N + Trt_N)/(Con_N*Trt_N)) ) })
```

```{r}
imp_lscape_MMA_pb1 <- list()
for (i in seq_along(df_imp_lscape2)) {
  imp_lscape_MMA_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_lscape_imp[[i]], mods = ~ 1 + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape2[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MMA_pb1))
```

```{r}
imp_lscape_MR_pb1 <- list()
for (i in seq_along(df_imp_lscape2)) {
  imp_lscape_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_lscape_imp[[i]], mods = ~ Method + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape2[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MR_pb1))

imp_lscape_MR_pb3 <- list()
for (i in seq_along(df_imp_lscape2)) {
  imp_lscape_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_lscape_imp[[i]], mods = ~ Animal + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape2[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MR_pb3))

imp_lscape_MR_pb5 <- list()
for (i in seq_along(df_imp_lscape2)) {
  imp_lscape_MR_pb1[[i]] <- rma.mv(Effect_size, V = VCV_mat_lscape_imp[[i]], mods = ~ Method * Months + Plot_size + Year + root_inv_ESS, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|OLRE), data = df_imp_lscape2[[i]], verbose = TRUE) }
summary(pool(imp_lscape_MR_pb5))
```

#### Save objects

```{r}
saveRDS(imp_lscape_MMA_mod1, here("Results", "Models", "Landscape", "imp_lscape_MMA.rds"))
saveRDS(imp_lscape_MMA_pb1, here("Results", "Models", "Landscape", "imp_lscape_MMA_pb.rds"))
saveRDS(imp_lscape_MR_mod1, here("Results", "Models", "Landscape", "imp_lscape_MR1.rds"))
saveRDS(imp_lscape_MR_mod2, here("Results", "Models", "Landscape", "imp_lscape_MR2.rds"))
saveRDS(imp_lscape_MR_mod3, here("Results", "Models", "Landscape", "imp_lscape_MR3.rds"))
saveRDS(imp_lscape_MR_mod4, here("Results", "Models", "Landscape", "imp_lscape_MR4.rds"))
saveRDS(imp_lscape_MR_mod5, here("Results", "Models", "Landscape", "imp_lscape_MR5.rds"))
saveRDS(imp_lscape_MR_pb1, here("Results", "Models", "Landscape", "imp_lscape_MR1_pb.rds"))
saveRDS(imp_lscape_MR_pb3, here("Results", "Models", "Landscape", "imp_lscape_MR3_pb.rds"))
saveRDS(imp_lscape_MR_pb5, here("Results", "Models", "Landscape", "imp_lscape_MR5_pb.rds"))
```

```{r}
rm(list = ls())
```
