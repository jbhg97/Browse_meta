---
title: "Mammal browsing control meta-analysis results"
author: "Jamie"
format: html
editor: visual
---

# Non-lethal mammal control Meta analysis - Results

```{r}
library(pacman)
p_load(tidyverse, readxl, writexl, kableExtra, orchaRd, clubSandwich, metafor, mice)
```

## Literature synthesis

(Fill gaps with information from Prelim_process quarto doc or from tables produced in this doc)

```{r}
#code to do the average effects per paper
#Run code chunks from prelim_process to add Paper IDs to dataframe - take df1

df_avg <- df1 %>% group_by(Paper_ID) %>% 
  summarise(count = n())

df_avg <- df_avg %>% 
  summarise(N = nrow(df_avg),
            mean = mean(df_avg$count),
            sd = sd(df_avg$count),
            min = min(df_avg$count),
            max = max(df_avg$count))
```

Data were extracted from XXX papers, resulting in XXXX pairwise effect sizes (XXX SMD effects and XXX Log odds effects). Papers contributed an average of XXX +- XXX (mean +- SD) effect sizes to the data set (range: X-X). Experiments were distributed globally across XX countries, see Fig XXX (map of distribution of studies). One study conducted experiments in two countries (Barrere et al., 2021): France and Sweden, hence why N = number of papers + 1.

```{r}
#packages
p_load(sf, rnaturalearth, rnaturalearthdata)

#edit strings for map making packages
df_map <- df1 %>% 
  mutate(Country = case_when(Country == "USA" ~ "United States of America",
                   Country == "UK" ~"United Kingdom",
                   TRUE ~ Country))

#get unique combinations of study and country - should be No. of studies + 1 because of Barrere et al
df_map1 <- df_map %>% 
  group_by(ref, Country) %>% 
  distinct(ref, Country) %>% 
  ungroup() %>% select(Country)

df_map_inset <- df_map1 %>% 
  count(Country, name = "N") %>% 
  arrange(desc(N))

#map
world <- ne_countries(scale = "medium", returnclass = "sf")
world <- subset(world, continent != "Antarctica") #Antarctica is unnecessary for this map - no forests

world <- merge(world, df_map_inset, by.x = "name", by.y = "Country", all.x = TRUE)
world$N[is.na(world$N)] <- 0
world$is_zero <- ifelse(world$N == 0, "Zero", "Non-zero")

map_plot <- ggplot() +
  geom_sf(data = world[world$is_zero == "Zero", ], fill = "lightgrey", color = "black") +
  geom_sf(data = world[world$is_zero == "Non-zero", ], aes(fill = N)) +
  scale_fill_gradient(low = "lightblue", high = "darkgreen", name = "N") +
  labs(caption = str_wrap("Fig XX. A map showing the distribution of experimental locations globally. Grey denotes N = 0. Inset table shows the number of papers that conducted experiments in given countries; note that N = No. of papers + 1 as Barrere et al. (2021) conducted experiments in both France and Sweden.", width = 110)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        panel.border = element_blank(),
        plot.margin = margin(0, 0, 0, 0, "mm"),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        plot.caption = element_text(hjust = 0.5))

print(map_plot)

#still want to add an inset table - it will increase the clarity of the figure as some of the small numbers are not easy to discern based solely on colour or make USA single colour then the others will be spread better?
```

Next tasks - write results for breakdown of the effects into broad categories. Produce tables for N \>25? and then a full table for supp info. Table will include avg effect size with SD/SE.

```{r}
#Table for supp info 

```

```{r}
#Table for main text


```

## Complete case analysis

### Plant scale

Read in

```{r}
df_comp_plant <- read_xlsx("/homevol/jbhg/Browse_meta/Analysis/Comp_comb_plant.xlsx")

#add an observation level factor
df_comp_plant <- df_comp_plant %>% mutate(OLRE = row_number())
```

Build Variance Covariance matrix using shared data column

```{r}
VCV_mat_plant <- vcalc(vi = Sampling_variance, cluster = Shared_data, data = df_comp_plant, rho = 0.5, nearpd = TRUE)
```

Multilevel Meta-analytic model

```{r}
plant_MMA_mod1 <- rma.mv(Effect_size ~ 1, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_plant)

# the plot size data is incomplete - toss up. Either lose plot size (Spake et al 2020 shows its important for measures of biodiversity which I deliberately excluded for this but its still going to be relevant for any effects measuring density, cover etc) or lose the NAs approx. 340 rows. Is it possible to add a constant in the place of the NAs?

summary(plant_MMA_mod1)

orchaRd::i2_ml(plant_MMA_mod1)
```

Meta-regression models

```{r}
plant_MR_mod1 <- rma.mv(Effect_size ~ Method + Animal, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_plant)

summary(plant_MR_mod1)

plant_MR_mod2 <- rma.mv(Effect_size ~ -1 + Method + Animal, V = VCV_mat_plant, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_plant) #suppressed intercept - need to fix so it works at all levels

summary(plant_MR_mod2)
```

Orchard plots

```{r}
orchard_plot(plant_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD")
mod_results(plant_MR_mod1, mod = "Method", group = "Paper_ID")
```

Non-independence sensitivity

```{r}
plant_MR_mod1_rob <- robust(plant_MR_mod1, cluster = df_comp_plant$Paper_ID)

summary(plant_MR_mod1_rob)
```

### Coupe scale

Read in

```{r}
df_comp_coupe <- read_xlsx("/homevol/jbhg/Browse_meta/Analysis/Comp_comb_coupe.xlsx")

#add an observation level factor
df_comp_coupe <- df_comp_coupe %>% mutate(OLRE = row_number())
```

Build Variance Covariance matrix using shared data column

```{r}
VCV_mat_coupe <- vcalc(vi = Sampling_variance, cluster = Shared_data, data = df_comp_coupe, rho = 0.5, nearpd = TRUE)
```

Multilevel Meta-analytic model

```{r}
coupe_MMA_mod1 <- rma.mv(Effect_size ~ 1, V = VCV_mat_coupe, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_coupe)

summary(coupe_MMA_mod1)

orchaRd::i2_ml(coupe_MMA_mod1)
```

Meta-regression models

```{r}
coupe_MR_mod1 <- rma.mv(Effect_size ~ Method + Animal, V = VCV_mat_coupe, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_coupe)

summary(coupe_MR_mod1)

coupe_MR_mod2 <- rma.mv(Effect_size ~ -1 + Method + Animal, V = VCV_mat_coupe, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_coupe) #suppressed intercept - need to fix so it works at all levels

summary(coupe_MR_mod2)
```

Orchard plots

```{r}
orchard_plot(coupe_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD", angle = 0)
mod_results(coupe_MR_mod1, mod = "Method", group = "Paper_ID")
```

Non-independence sensitivity

```{r}
coupe_MR_mod1_rob <- robust(coupe_MR_mod1, cluster = df_comp_coupe$Paper_ID)

summary(coupe_MR_mod1_rob)
```

### Landscape scale

Read in

```{r}
df_comp_lscape <- read_xlsx("/homevol/jbhg/Browse_meta/Analysis/Comp_comb_lscape.xlsx")

#add an observation level factor
df_comp_lscape <- df_comp_lscape %>% mutate(OLRE = row_number())
```

Build Variance Covariance matrix using shared data column

```{r}
VCV_mat_lscape <- vcalc(vi = Sampling_variance, cluster = Shared_data, data = df_comp_lscape, rho = 0.5, nearpd = TRUE)
```

Multilevel Meta-analytic model

```{r}
lscape_MMA_mod1 <- rma.mv(Effect_size ~ 1, V = VCV_mat_lscape, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_lscape)

summary(lscape_MMA_mod1)

orchaRd::i2_ml(lscape_MMA_mod1)
```

Meta-regression models

```{r}
lscape_MR_mod1 <- rma.mv(Effect_size ~ Method + Animal, V = VCV_mat_lscape, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_lscape)

summary(lscape_MR_mod1)

lscape_MR_mod2 <- rma.mv(Effect_size ~ -1 + Method + Animal, V = VCV_mat_lscape, test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_comp_lscape) #suppressed intercept - need to fix so it works at all levels

summary(lscape_MR_mod2)
```

Orchard plots

```{r}
orchard_plot(lscape_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD", angle = 0)
mod_results(lscape_MR_mod1, mod = "Method", group = "Paper_ID")
```

Non-independence sensitivity

```{r}
lscape_MR_mod1_rob <- robust(lscape_MR_mod1, cluster = df_comp_lscape$Paper_ID)

summary(lscape_MR_mod1_rob)
```

## Imputed case analysis

### Plant scale

Read in

```{r}
df_imp_plant <- readRDS("/homevol/jbhg/Browse_meta/Analysis/Imp_comb_plant")

# Add an observation level random effect
df_imp_plant1 <- lapply(df_imp_plant, function(df){ 
  df %>% mutate(OLRE = row_number()) })
```

Build Variance Covariance matrices using shared data column

```{r}
VCV_mat_plant_imp <- lapply(df_imp_plant1, function(df){
  vcalc(vi = Sampling_variance, cluster = Shared_data, data = df, rho = 0.5, nearpd = TRUE) })
```

Multilevel Meta-analytic model

```{r}
imp_plant_MMA_mod1 <- list()

for (i in seq_along(df_imp_plant1)) { 
  imp_plant_MMA_mod1[[i]] <- rma.mv(Effect_size ~ 1, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_plant1[[i]]) }

#pool step isn't working correctly - it pools the estimates adequately but loses the data structure so that orchard cannot recognise it as a rma.mv object.

imp_plant_MMA_pool1 <- summary(pool(imp_plant_MMA_mod1))
print(imp_plant_MMA_pool1)

#orchaRd::i2_ml(imp_plant_MMA_pool1) #this will work on any of the frames in the imp_plant_MMA_mod1 list but not on the pooled
```

Meta-regression models

```{r}
imp_plant_MR_mod1 <- list()

for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod1[[i]] <- rma.mv(Effect_size ~ Method + Animal, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_plant1[[i]]) }

summary(pool(imp_plant_MR_mod1))

imp_plant_MR_mod2 <- list()

for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod2[[i]] <- rma.mv(Effect_size ~ -1 + Method + Animal, V = VCV_mat_plant_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_plant1[[i]]) } #suppressed intercept - need to fix so it works at all levels

summary(pool(imp_plant_MR_mod2))
```

Orchard plots - these will not currently work. Need to work out a way to fix this.

```{r}
#orchard_plot(plant_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD")
#mod_results(plant_MR_mod1, mod = "Method", group = "Paper_ID")
```

Non-independence sensitivity

```{r}
imp_plant_MR_mod1_rob <- list()

for (i in seq_along(df_imp_plant1)) {
  imp_plant_MR_mod1_rob[[i]] <- robust(imp_plant_MR_mod1[[i]], cluster = df_imp_plant[[i]]$Paper_ID) }

summary(pool(imp_plant_MR_mod1_rob))
```

### Coupe scale

Read in

```{r}
df_imp_coupe <- readRDS("/homevol/jbhg/Browse_meta/Analysis/Imp_comb_coupe")

# Add an observation level random effect
df_imp_coupe1 <- lapply(df_imp_coupe, function(df){ 
  df %>% mutate(OLRE = row_number()) })
```

Build Variance Covariance matrices using shared data column

```{r}
VCV_mat_coupe_imp <- lapply(df_imp_coupe1, function(df){
  vcalc(vi = Sampling_variance, cluster = Shared_data, data = df, rho = 0.5, nearpd = TRUE) })
```

Multilevel Meta-analytic model

```{r}
imp_coupe_MMA_mod1 <- list()

for (i in seq_along(df_imp_coupe1)) { 
  imp_coupe_MMA_mod1[[i]] <- rma.mv(Effect_size ~ 1, V = VCV_mat_coupe_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_coupe1[[i]], verbose = TRUE) }

#pool step isn't working correctly - it pools the estimates adequately but loses the data structure so that orchard cannot recognise it as a rma.mv object.

imp_coupe_MMA_pool1 <- summary(pool(imp_coupe_MMA_mod1))
print(imp_coupe_MMA_pool1)

#orchaRd::i2_ml(imp_plant_MMA_pool1) #this will work on any of the frames in the imp_plant_MMA_mod1 list but not on the pooled
```

Meta-regression models

```{r}
imp_coupe_MR_mod1 <- list()

for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod1[[i]] <- rma.mv(Effect_size ~ Method + Animal, V = VCV_mat_coupe_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_coupe1[[i]], verbose = TRUE) }

summary(pool(imp_coupe_MR_mod1))

imp_coupe_MR_mod2 <- list()

for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod2[[i]] <- rma.mv(Effect_size ~ -1 + Method + Animal, V = VCV_mat_coupe_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_coupe1[[i]], verbose = TRUE) } #suppressed intercept - need to fix so it works at all levels

summary(pool(imp_coupe_MR_mod2))
```

Orchard plots - these will not currently work. Need to work out a way to fix this.

```{r}
#orchard_plot(plant_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD")
#mod_results(plant_MR_mod1, mod = "Method", group = "Paper_ID")
```

Non-independence sensitivity

```{r}
imp_coupe_MR_mod1_rob <- list()

for (i in seq_along(df_imp_coupe1)) {
  imp_coupe_MR_mod1_rob[[i]] <- robust(imp_coupe_MR_mod1[[i]], cluster = df_imp_coupe[[i]]$Paper_ID) }

summary(pool(imp_coupe_MR_mod1_rob))
```

### Landscape scale

Read in

```{r}
df_imp_lscape <- readRDS("/homevol/jbhg/Browse_meta/Analysis/Imp_comb_lscape")

# Add an observation level random effect
df_imp_lscape1 <- lapply(df_imp_lscape, function(df){ 
  df %>% mutate(OLRE = row_number()) })
```

Build Variance Covariance matrices using shared data column

```{r}
VCV_mat_lscape_imp <- lapply(df_imp_lscape1, function(df){
  vcalc(vi = Sampling_variance, cluster = Shared_data, data = df, rho = 0.5, nearpd = TRUE) })
```

Multilevel Meta-analytic model

```{r}
imp_lscape_MMA_mod1 <- list()

for (i in seq_along(df_imp_lscape1)) { 
  imp_lscape_MMA_mod1[[i]] <- rma.mv(Effect_size ~ 1, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_lscape1[[i]], verbose = TRUE) }

#pool step isn't working correctly - it pools the estimates adequately but loses the data structure so that orchard cannot recognise it as a rma.mv object.

imp_lscape_MMA_pool1 <- summary(pool(imp_lscape_MMA_mod1))
print(imp_lscape_MMA_pool1)

#orchaRd::i2_ml(imp_plant_MMA_pool1) #this will work on any of the frames in the imp_plant_MMA_mod1 list but not on the pooled
```

Meta-regression models

```{r}
imp_lscape_MR_mod1 <- list()

for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod1[[i]] <- rma.mv(Effect_size ~ Method + Animal, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_lscape1[[i]], verbose =TRUE) }

summary(pool(imp_lscape_MR_mod1))

imp_lscape_MR_mod2 <- list()

for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod2[[i]] <- rma.mv(Effect_size ~ -1 + Method + Animal, V = VCV_mat_lscape_imp[[i]], test = "t", dfs = "contain", random = list(~1|Paper_ID, ~1|Repeat_measures, ~1|Plant_genus, ~1|Plot_size, ~1|OLRE), data = df_imp_lscape1[[i]], verbose = TRUE) } #suppressed intercept - need to fix so it works at all levels

summary(pool(imp_lscape_MR_mod2))
```

Orchard plots - these will not currently work. Need to work out a way to fix this.

```{r}
#orchard_plot(plant_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "SMD")
#mod_results(plant_MR_mod1, mod = "Method", group = "Paper_ID")
```

Non-independence sensitivity

```{r}
imp_lscape_MR_mod1_rob <- list()

for (i in seq_along(df_imp_lscape1)) {
  imp_lscape_MR_mod1_rob[[i]] <- robust(imp_lscape_MR_mod1[[i]], cluster = df_imp_lscape[[i]]$Paper_ID) }

summary(pool(imp_lscape_MR_mod1_rob))
```
