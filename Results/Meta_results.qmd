---
title: "Meta_results"
author: "Jamie"
format: html
editor: visual
---

```{r}
library(pacman)
p_load(tidyverse, readxl, writexl, sf, rnaturalearth, rnaturalearthdata, patchwork, ggtext, scales, gridExtra, orchaRd, here, flextable, officer)
```

```{r}
# functions

# plant scale bubble plot - requires different function as there's only one control method so the table structure is slightly different

plant_month_bubble <- function(df, model, method, colour, xmin, xmax, ymin, ymax, k){
  
  df1 <- df %>% filter(Method == method)
  
  model_results <- mod_results(model, mod = "Months", group = "Paper_ID") 
  mod_table <- model_results$mod_table
  
  mod_table_method <- mod_table
  
  plot <- ggplot(data = df1, aes(x = Months, y = Effect_size)) + 
    geom_point(aes(size = 1/sqrt(Sampling_variance)), alpha = 0.5, shape = 21, colour = colour, fill = colour) +
    labs(x = "Time / months", y = "Effect size / SMD", size = "Precision (1/SE)", title = paste0(method," (k = ", k,")")) + 
    ggplot2::geom_smooth(data = mod_table_method, 
                         ggplot2::aes(x = moderator , y = lowerPR), method = "loess", 
                         formula = y ~ x, se = FALSE, lty = "dotted", colour = "black") + 
    ggplot2::geom_smooth(data = mod_table_method, ggplot2::aes(x = moderator, y = upperPR), method = "loess", 
                         formula = y ~ x, se = FALSE, lty = "dotted", colour = "black") + 
    ggplot2::geom_smooth(data = mod_table_method, ggplot2::aes(x = moderator, y = lowerCL), method = "loess", 
                         formula = y ~ x, se = FALSE, lty = "dashed", colour = "black") + 
    ggplot2::geom_smooth(data = mod_table_method, ggplot2::aes(x = moderator, y = upperCL), method = "loess", 
                         formula = y ~ x, se = FALSE, lty = "dashed", colour = "black") + 
    ggplot2::geom_smooth(data = mod_table_method, ggplot2::aes(x = moderator, y = estimate), method = "loess", 
                         formula = y ~ x, se = FALSE, colour = "black") + 
    xlim(xmin,xmax) + ylim(ymin,ymax) +
    theme_bw() + theme(title = element_text(size = 10),
                       axis.title  = element_text(size = 10), 
                       axis.text = element_text(size = 8), 
                       axis.text.y = element_text(size = 8),
                       legend.text = element_text(size = 8), 
                       legend.title = element_text(size = 10))
  
  return(plot)
}

# other scale bubble plot

month_bubble <- function(df, model, method, colour, xmin, xmax, ymin, ymax, k){
  
  df1 <- df %>% filter(Method == method)
  
  model_results <- mod_results(model, mod = "Months", group = "Paper_ID", by = "Method") 
  mod_table <- model_results$mod_table
  
  mod_table_method <- mod_table %>% filter(condition == method)
  
  plot <- ggplot(data = df1, aes(x = Months, y = Effect_size)) + 
    geom_point(aes(size = 1/sqrt(Sampling_variance)), alpha = 0.5, shape = 21, colour = colour, fill = colour) +
    labs(x = "Time / months", y = "Effect size / SMD", size = "Precision (1/SE)", title = paste0(method," (k = ", k,")")) + 
    ggplot2::geom_smooth(data = mod_table_method, 
                         ggplot2::aes(x = moderator , y = lowerPR), method = "loess", 
                         formula = y ~ x, se = FALSE, lty = "dotted", colour = "black") + 
    ggplot2::geom_smooth(data = mod_table_method, ggplot2::aes(x = moderator, y = upperPR), method = "loess", 
                         formula = y ~ x, se = FALSE, lty = "dotted", colour = "black") + 
    ggplot2::geom_smooth(data = mod_table_method, ggplot2::aes(x = moderator, y = lowerCL), method = "loess", 
                         formula = y ~ x, se = FALSE, lty = "dashed", colour = "black") + 
    ggplot2::geom_smooth(data = mod_table_method, ggplot2::aes(x = moderator, y = upperCL), method = "loess", 
                         formula = y ~ x, se = FALSE, lty = "dashed", colour = "black") + 
    ggplot2::geom_smooth(data = mod_table_method, ggplot2::aes(x = moderator, y = estimate), method = "loess", 
                         formula = y ~ x, se = FALSE, colour = "black") + 
    xlim(xmin,xmax) + ylim(ymin,ymax) +
    theme_bw() + theme(title = element_text(size = 10),
                       axis.title  = element_text(size = 10), 
                       axis.text = element_text(size = 8), 
                       axis.text.y = element_text(size = 8),
                       legend.text = element_text(size = 8), 
                       legend.title = element_text(size = 10))
  
  return(plot)
}

save_plot <- function(plot, filename, height ){
  ggsave(here("Results", "Figures", filename), plot = plot, width = 16, height = height, units = "cm" , dpi = 320)
}
```

```{r}
df <- readRDS(here("Analysis", "All_impcase_es.rds"))
df1 <- df[[1]] #select one of the imputed case frames to do the summary statistics for literature synthesis.

df2 <- df1 %>% mutate(Method = as.factor(Method),
                      Animal = as.factor(Animal))

df3 <- read_excel(here("Analysis", "All_compcase_es.xlsx")) %>% mutate(Method = as.factor(Method),
                                                                       Animal = as.factor(Animal))
```

# Results

## Literature synthesis

```{r}
#code to do the average effects per paper

df_avg <- df1 %>% group_by(Paper_ID) %>% 
  summarise(count = n())

df_avg <- df_avg %>% 
  summarise(N = nrow(df_avg),
            mean = mean(df_avg$count),
            sd = sd(df_avg$count),
            min = min(df_avg$count),
            max = max(df_avg$count))
```

Data were extracted from 156 papers, resulting in 2795 pairwise effect sizes (1908 complete case effects and 887 additional imputed case effects). Papers contributed an average of 17.9 +/- 42.3 (mean +/- SD) effect sizes to the data set. Experiments were distributed globally across 23 countries, see Fig XXX (map of distribution of studies). One study conducted experiments in two countries (Barrere et al., 2021): France and Sweden, hence why N = number of papers + 1.

## Map plot

```{r}
#edit strings for map making packages
df_map <- df3 %>% 
  mutate(Country = case_when(Country == "USA" ~ "United States of America",
                   Country == "UK" ~"United Kingdom",
                   TRUE ~ Country))

#get unique combinations of study and country - should be No. of studies + 1 because of Barrere et al
df_map1 <- df_map %>% 
  group_by(Paper_ID, Country) %>% 
  distinct(Paper_ID, Country) %>% 
  ungroup() %>% dplyr::select(Country)

df_map_inset <- df_map1 %>% 
  count(Country, name = "N") %>% 
  arrange(desc(N))
map_table <- flextable(df_map_inset) %>% align(align = "center", part = "all") %>% autofit(.)
save_as_docx(map_table, path = here("Results", "Tables", "Map_table.docx"))

#map
world <- ne_countries(scale = "small", returnclass = "sf")
world <- subset(world, continent != "Antarctica") #Antarctica is unnecessary for this map - no forests

world <- merge(world, df_map_inset, by.x = "name", by.y = "Country", all.x = TRUE)
world$N[is.na(world$N)] <- 0
world$is_zero <- ifelse(world$N == 0, "Zero", "Non-zero")

map <- ggplot() +
  geom_sf(data = world[world$is_zero == "Zero", ], fill = "lightgrey", color = "black") +
  geom_sf(data = world[world$is_zero == "Non-zero", ], aes(fill = N)) +
  scale_fill_gradientn(colors = c("lightblue","turquoise","navy"), values = scales::rescale(c(1, 10, max(world$N, na.rm = TRUE))), name = "N") +
  theme_bw() + 
  theme(panel.grid = element_blank(),
        panel.border = element_blank(),
        plot.margin = margin(0, 0, 0, 0, "mm"),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())

map_plot <- map
```

## Orchard plot Figures

### Plant scale

```{r}
# plant scale orchard plots - tweak caption position and wrap as needed

df_comp_plant <- read_excel(here("Data processing", "Meta_full_data.xlsx"), sheet = "Complete case effects") %>% filter(Scale == "Plant")
plant_MR_mod1 <- readRDS(here("Results", "Models", "Plant", "Plant_MR1.rds"))
plant_MR_mod3 <- readRDS(here("Results", "Models", "Plant", "Plant_MR3.rds"))

p1 <- orchard_plot(plant_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "bottom.out", angle = 0, k = F, g = F) + ylim(c(-4, 6))
p2 <- orchard_plot(plant_MR_mod3, mod = "Animal", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "none", angle = 0, k = F, g = F) + ylim(c(-4, 6))

plot1 <- p1/p2 + plot_annotation(tag_levels = "A") 
print(plot1)

save_plot(plot1, "plant_orchard.png", 16)
```

```{r}
# plant scale bubble plot - adjust axes limits, text sizes etc as necessary

colour_options <- c("#88CCEE", "#CC6677", "#DDCC77", "#117733", "#332288", "#AA4499", "#44AA99", "#999933", "#882255", "#661100", "#6699CC", "#888888", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")

plant_MR_mod5 <- readRDS(here("Results", "Models", "Plant", "Plant_MR5.rds"))

p3 <- plant_month_bubble(df_comp_plant, plant_MR_mod5, method = "Repellents", colour = "#CC6677", xmin = 0, xmax = 1.25, ymin = -4, ymax = 6, k = 121)

plot2 <- p3 
print(plot2)

save_plot(plot2, "plant_bubble.png", 6)
```

### Coupe scale

```{r}
# coupe scale orchard plots - tweak caption position and wrap as needed

df_comp_coupe <- read_excel(here("Data processing", "Meta_full_data.xlsx"), sheet = "Complete case effects") %>% filter(Scale == "Coupe")
coupe_MR_mod1 <- readRDS(here("Results", "Models", "Coupe", "coupe_MR1.rds"))
coupe_MR_mod3 <- readRDS(here("Results", "Models", "Coupe", "coupe_MR3.rds"))

c1 <- orchard_plot(coupe_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "bottom.out", angle = 0) + ylim(c(-5,10))
c2 <- orchard_plot(coupe_MR_mod3, mod = "Animal", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "none", angle = 0) + ylim(c(-5,10))

c1_sup <- orchard_plot(coupe_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "bottom.out", angle = 0)
c2_sup <- orchard_plot(coupe_MR_mod3, mod = "Animal", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "none", angle = 0) 

plot3 <- c1/c2 + plot_annotation(tag_levels = "A") 
plot3_sup <- c1_sup/c2_sup + plot_annotation(tag_levels = "A")

print(plot3)
print(plot3_sup)

save_plot(plot3, "coupe_orchard.png", 20)
save_plot(plot3_sup, "coupe_orchard_sup.png", 20)
```

```{r}
# coupe scale bubble plot - tweak caption position and axes limits as needed

colour_options <- c("#88CCEE", "#CC6677", "#DDCC77", "#117733", "#332288", "#AA4499", "#44AA99", "#999933", "#882255", "#661100", "#6699CC", "#888888", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")

coupe_MR_mod5 <- readRDS(here("Results", "Models", "Coupe", "coupe_MR5.rds"))

c3 <- month_bubble(df_comp_coupe, coupe_MR_mod5, "Exclusion fence", "#88CCEE", 0, 140, -5, 10, 219)
c3_sup <- month_bubble(df_comp_coupe, coupe_MR_mod5, "Exclusion fence", "#88CCEE", 0, 140, -20, 17, 219)
c4 <- month_bubble(df_comp_coupe, coupe_MR_mod5, "Repellents", "#332288", 0, 50, -4, 6, 415)
c5 <- month_bubble(df_comp_coupe, coupe_MR_mod5, "Tree guards", "#009E73", 0, 65, -5, 10, 339)
c6 <- month_bubble(df_comp_coupe, coupe_MR_mod5, "Other fencing", "#117733", 0, 30, -5, 5, 15)
c7 <- month_bubble(df_comp_coupe, coupe_MR_mod5, "Natural debris", "#CC6677", 0, 65, -3, 5, 23)
c8 <- month_bubble(df_comp_coupe, coupe_MR_mod5, "Stock manipulation", "#AA4499", 0, 65, -3, 4, 111)
c9 <- month_bubble(df_comp_coupe, coupe_MR_mod5, "Neighbour effects", "#DDCC77", 0, 50, -4, 3, 24)

plot4 <- c3/c4/c5/c6 
plot4.1 <- c7/c8/c9 
plot4_sup <- c3_sup/c4/c5/c6

print(plot4)


save_plot(plot4, "coupe_bubble.png", 20)
save_plot(plot4.1, "coupe_bubblea.png", 15)
save_plot(plot4_sup, "coupe_bubble_sup.png", 20)
```

### Landscape scale

```{r}
# Landscape scale orchard plots - tweak caption position and wrap as needed

df_comp_lscape <- read_excel(here("Data processing", "Meta_full_data.xlsx"), sheet = "Complete case effects") %>% filter(Scale == "Landscape")
lscape_MR_mod1 <- readRDS(here("Results", "Models", "Landscape", "lscape_MR1.rds"))
lscape_MR_mod3 <- readRDS(here("Results", "Models", "Landscape", "lscape_MR3.rds"))

l1 <- orchard_plot(lscape_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "bottom.out", angle = 0) + ylim(c(-5,5))
l2 <- orchard_plot(lscape_MR_mod3, mod = "Animal", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "none", angle = 0) + ylim(c(-5,5))

l1_sup <- orchard_plot(lscape_MR_mod1, mod = "Method", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "bottom.out", angle = 0)
l2_sup <- orchard_plot(lscape_MR_mod3, mod = "Animal", group = "Paper_ID", xlab = "Effect size / SMD", legend.pos = "none", angle = 0)

plot5 <- l1/l2 + plot_annotation(tag_levels = "A")
plot5_sup <- l1_sup/l2_sup + plot_annotation(tag_levels = "A")

print(plot5)
print(plot5_sup)

save_plot(plot5, "lscape_orchard.png", 20)
save_plot(plot5_sup, "lscape_orchard_sup.png", 20)
```

```{r}
# landscape scale bubble plot - tweak caption position and axes limits as needed

colour_options <- c("#88CCEE", "#CC6677", "#DDCC77", "#117733", "#332288", "#AA4499", "#44AA99", "#999933", "#882255", "#661100", "#6699CC", "#888888", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")

lscape_MR_mod5 <- readRDS(here("Results", "Models", "Landscape", "lscape_MR5.rds"))

l3 <- month_bubble(df_comp_lscape, lscape_MR_mod5, "Exclusion fence", "#88CCEE", 0, 250, -2, 9, 413)
l4 <- month_bubble(df_comp_lscape, lscape_MR_mod5, "Repellents", "#332288", 0, 65, -2, 4, 73)
l5 <- month_bubble(df_comp_lscape, lscape_MR_mod5, "Tree guards", "#44AA99", 0, 65, -2, 4, 56)
l6 <- month_bubble(df_comp_lscape, lscape_MR_mod5, "Natural debris", "#CC6677", 0, 20, -3, 3.5, 15)

plot6 <- l3/l4/l5/l6
print(plot6)

save_plot(plot6, "lscape_bubble.png", 20)
```

## Tables

Tables to be used in the supplementary information - will summarise all three tests at each scale and each model including publication bias.

### Functions

Pull functions from table summary qmd.

```{r}
mod_extract <- function(model){
  mod_summary <- summary(model)
  
  fix.eff <- rownames(mod_summary$beta)
  estimate <- mod_summary$beta
  ci.lower <- mod_summary$ci.lb
  ci.upper <- mod_summary$ci.ub
  std.e <- mod_summary$se
  test.stat <- mod_summary$zval
  p.val <- mod_summary$pval
  
  results <- tibble(term = fix.eff,
                    est = estimate,
                    ci.lb = ci.lower,
                    ci.ub = ci.upper,
                    se = std.e,
                    stat = test.stat,
                    p.val = p.val)
  
  return(results) }

rob_mod_extract <- function(model){
  mod_summary <- summary(model)
  
  fix.eff <- rownames(mod_summary$beta)
  estimate <- mod_summary$beta
  ci.lower <- mod_summary$ci.lb
  ci.upper <- mod_summary$ci.ub
  std.e <- mod_summary$se
  test.stat <- mod_summary$zval
  p.val <- mod_summary$pval
  
  results <- tibble(term = fix.eff,
                    est = estimate,
                    ci.lb = ci.lower,
                    ci.ub = ci.upper,
                    se = std.e,
                    stat = test.stat,
                    p.val = p.val)
  
  results1 <- results %>% rename_with(~ paste0("rob_",.))
  
  return(results1) }

imp_mod_extract <- function(model){
  mod_summary <- summary(pool(model)) %>% as_tibble(.)
  
  results <- mod_summary %>% rename_with(~ paste0("imp_",.)) %>% 
    rename(imp_est = imp_estimate,
           imp_se = imp_std.error,
           imp_stat = imp_statistic,
           imp_p.val = imp_p.value)
  
  return(results) }

build_tab <- function(df1, df2, df3){
  set_flextable_defaults(font.family = "Calibri", font.size = 10)
  border_style <- fp_border(color = "black", width = 1)
  
  table <- cbind(df1, df2, df3) %>% dplyr::select(-c(rob_term, imp_term, rob_ci.lb, rob_ci.ub, imp_df))
  
  flex <- flextable(table) %>%
    align(align = "center", part = "all") %>% 
    padding(., padding.left = 0, padding.right = 0) %>% 
    add_header_row(values = c("", "Complete case", "Robust", "Imputed case"), colwidths = c(1,6,4,4)) %>% 
    vline(i = NULL, j = 1 + 6, border = border_style, part = "all") %>% 
    vline(i = NULL, j = 1 + 10, border = border_style, part = "all") %>% 
    colformat_double(., digits = 5) %>% 
    autofit(.) # edit this one to add in extra header rows and generally neaten up
    
  
  return(flex) }

build_tab_pb <- function(df1, df2){
  set_flextable_defaults(font.family = "Calibri", font.size = 10)
  border_style <- fp_border(color = "black", width = 1)
  
  table <- cbind(df1, df2) %>% dplyr::select(-c(rob_term))
  
  flex <- flextable(table) %>%
    align(align = "center", part = "all") %>% 
    padding(., padding.left = 0, padding.right = 0) %>% 
    add_header_row(values = c("", "Complete case", "Robust"), colwidths = c(1,6,6)) %>% 
    vline(i = NULL, j = 1 + 6, border = border_style, part = "all") %>% 
    colformat_double(., digits = 5) %>% 
    autofit(.) # edit this one to add in extra header rows and generally neaten up
    
  
  return(flex) }
```

## Plant scale

### Multilevel meta-analytic model (MMA)

Read in

```{r}
MMA <- readRDS(here("Results", "Models", "Plant", "Plant_MMA.rds"))
MMA_rob <- readRDS(here("Results", "Models", "Plant", "Plant_MMA_rob.rds"))
imp_MMA <- readRDS(here("Results", "Models", "Plant", "imp_Plant_MMA.rds"))
MMA_pb <- readRDS(here("Results", "Models", "Plant", "Plant_MMA_pb.rds"))
MMA_pb_rob <- readRDS(here("Results", "Models", "Plant", "Plant_MMA_pb_rob.rds"))
```

Extract the relevant information using above functions.

```{r}
MMA_res <- mod_extract(MMA)
MMA_pb_res <- mod_extract(MMA_pb)

MMA_rob_res <- rob_mod_extract(MMA_rob) 
MMA_pb_rob_res <- rob_mod_extract(MMA_pb_rob) 

imp_MMA_res <- imp_mod_extract(imp_MMA)
```

Build tables

```{r}
MMA_flex <- build_tab(MMA_res, MMA_rob_res, imp_MMA_res)
MMA_pb_flex <- build_tab_pb(MMA_pb_res, MMA_pb_rob_res)
```

### Meta-regression (MR) - model 2

Model 2 is the suppressed intercept model investigating control method efficacy.

```{r}
MR2 <- readRDS(here("Results", "Models", "Plant", "Plant_MR2.rds"))
MR2_rob <- readRDS(here("Results", "Models", "Plant", "Plant_MR2_rob.rds"))
imp_MR2 <- readRDS(here("Results", "Models", "Plant", "imp_Plant_MR2.rds"))
MR2_pb <- readRDS(here("Results", "Models", "Plant", "Plant_MR2_pb.rds"))
MR2_pb_rob <- readRDS(here("Results", "Models", "Plant", "Plant_MR2_pb_rob.rds"))
```

```{r}
r2_ml(MR2)
```

```{r}
MR2_res <- mod_extract(MR2)
MR2_pb_res <- mod_extract(MR2_pb)

MR2_rob_res <- rob_mod_extract(MR2_rob) 
MR2_pb_rob_res <- rob_mod_extract(MR2_pb_rob) 

imp_MR2_res <- imp_mod_extract(imp_MR2)
```

Build tables

```{r}
MR2_flex <- build_tab(MR2_res, MR2_rob_res, imp_MR2_res)
MR2_pb_flex <- build_tab_pb(MR2_pb_res, MR2_pb_rob_res)
```

### MR - model 4

Model 4 is the suppressed intercept model investigating control of different browsing taxa

```{r}
MR4 <- readRDS(here("Results", "Models", "Plant", "Plant_MR4.rds"))
MR4_rob <- readRDS(here("Results", "Models", "Plant", "Plant_MR4_rob.rds"))
imp_MR4 <- readRDS(here("Results", "Models", "Plant", "imp_Plant_MR4.rds"))
MR4_pb <- readRDS(here("Results", "Models", "Plant", "Plant_MR4_pb.rds"))
MR4_pb_rob <- readRDS(here("Results", "Models", "Plant", "Plant_MR4_pb_rob.rds"))
```

```{r}
r2_ml(MR4)
```


```{r}
MR4_res <- mod_extract(MR4)
MR4_pb_res <- mod_extract(MR4_pb)

MR4_rob_res <- rob_mod_extract(MR4_rob) 
MR4_pb_rob_res <- rob_mod_extract(MR4_pb_rob) 

imp_MR4_res <- imp_mod_extract(imp_MR4)
```

Build tables

```{r}
MR4_flex <- build_tab(MR4_res, MR4_rob_res, imp_MR4_res)
MR4_pb_flex <- build_tab_pb(MR4_pb_res, MR4_pb_rob_res)
```

### MR - model 5

Model 5 investigated the retention of efficacy over time for different control methods.

```{r}
MR5 <- readRDS(here("Results", "Models", "Plant", "Plant_MR5.rds"))
MR5_rob <- readRDS(here("Results", "Models", "Plant", "Plant_MR5_rob.rds"))
imp_MR5 <- readRDS(here("Results", "Models", "Plant", "imp_Plant_MR5.rds"))
MR5_pb <- readRDS(here("Results", "Models", "Plant", "Plant_MR5_pb.rds"))
MR5_pb_rob <- readRDS(here("Results", "Models", "Plant", "Plant_MR5_pb_rob.rds"))
```

```{r}
r2_ml(MR5)
```

```{r}
MR5_res <- mod_extract(MR5)
MR5_pb_res <- mod_extract(MR5_pb)

MR5_rob_res <- rob_mod_extract(MR5_rob) 
MR5_pb_rob_res <- rob_mod_extract(MR5_pb_rob) 

imp_MR5_res <- imp_mod_extract(imp_MR5)
```

Build tables

```{r}
MR5_flex <- build_tab(MR5_res, MR5_rob_res, imp_MR5_res)
MR5_pb_flex <- build_tab_pb(MR5_pb_res, MR5_pb_rob_res)
```

### Save the document

```{r}
save_as_docx("Plant Scale Multilevel Meta-analytic model (MLMA)" = MMA_flex, "Plant Scale MMA publication bias" = MMA_pb_flex, "Plant Scale Meta-regression (MR) - suppressed intercept, control method" = MR2_flex, "Plant Scale MR - suppressed intercept, control method publication bias" = MR2_pb_flex, "Plant Scale MR - suppressed intercept, browsing taxa" = MR4_flex, "Plant Scale MR - suppresed intercept, browsing taxa publication bias" = MR4_pb_flex, "Plant Scale MR - control method efficacy through time" = MR5_flex, "Plant Scale MR - control method efficacy through time publication bias" = MR5_pb_flex, path = here("Results", "Tables", "Plant_scale_summary.docx"))
```

## Coupe scale

### Multilevel meta-analytic model (MMA)

Read in

```{r}
MMA <- readRDS(here("Results", "Models", "Coupe", "coupe_MMA.rds"))
MMA_rob <- readRDS(here("Results", "Models", "Coupe", "coupe_MMA_rob.rds"))
imp_MMA <- readRDS(here("Results", "Models", "Coupe", "imp_coupe_MMA.rds"))
MMA_pb <- readRDS(here("Results", "Models", "Coupe", "coupe_MMA_pb.rds"))
MMA_pb_rob <- readRDS(here("Results", "Models", "Coupe", "coupe_MMA_pb_rob.rds"))
```

Extract the relevant information using above functions.

```{r}
MMA_res <- mod_extract(MMA)
MMA_pb_res <- mod_extract(MMA_pb)

MMA_rob_res <- rob_mod_extract(MMA_rob) 
MMA_pb_rob_res <- rob_mod_extract(MMA_pb_rob) 

imp_MMA_res <- imp_mod_extract(imp_MMA)
```

Build tables

```{r}
MMA_flex <- build_tab(MMA_res, MMA_rob_res, imp_MMA_res)
MMA_pb_flex <- build_tab_pb(MMA_pb_res, MMA_pb_rob_res)
```

### Meta-regression (MR) - model 2

Model 2 is the suppressed intercept model investigating control method efficacy.

```{r}
MR2 <- readRDS(here("Results", "Models", "Coupe", "coupe_MR2.rds"))
MR2_rob <- readRDS(here("Results", "Models", "Coupe", "coupe_MR2_rob.rds"))
imp_MR2 <- readRDS(here("Results", "Models", "Coupe", "imp_coupe_MR2.rds"))
MR2_pb <- readRDS(here("Results", "Models", "Coupe", "coupe_MR2_pb.rds"))
MR2_pb_rob <- readRDS(here("Results", "Models", "Coupe", "coupe_MR2_pb_rob.rds"))
```

```{r}
r2_ml(MR2)
```

```{r}
MR2_res <- mod_extract(MR2)
MR2_pb_res <- mod_extract(MR2_pb)

MR2_rob_res <- rob_mod_extract(MR2_rob) 
MR2_pb_rob_res <- rob_mod_extract(MR2_pb_rob) 

imp_MR2_res <- imp_mod_extract(imp_MR2)
```

Build tables

```{r}
MR2_flex <- build_tab(MR2_res, MR2_rob_res, imp_MR2_res)
MR2_pb_flex <- build_tab_pb(MR2_pb_res, MR2_pb_rob_res)
```

### MR - model 4

Model 4 is the suppressed intercept model investigating control of different browsing taxa

```{r}
MR4 <- readRDS(here("Results", "Models", "Coupe", "coupe_MR4.rds"))
MR4_rob <- readRDS(here("Results", "Models", "Coupe", "coupe_MR4_rob.rds"))
imp_MR4 <- readRDS(here("Results", "Models", "Coupe", "imp_coupe_MR4.rds"))
MR4_pb <- readRDS(here("Results", "Models", "Coupe", "coupe_MR4_pb.rds"))
MR4_pb_rob <- readRDS(here("Results", "Models", "Coupe", "coupe_MR4_pb_rob.rds"))
```

```{r}
r2_ml(MR4)
```

```{r}
MR4_res <- mod_extract(MR4)
MR4_pb_res <- mod_extract(MR4_pb)

MR4_rob_res <- rob_mod_extract(MR4_rob) 
MR4_pb_rob_res <- rob_mod_extract(MR4_pb_rob) 

imp_MR4_res <- imp_mod_extract(imp_MR4)
```

Build tables

```{r}
MR4_flex <- build_tab(MR4_res, MR4_rob_res, imp_MR4_res)
MR4_pb_flex <- build_tab_pb(MR4_pb_res, MR4_pb_rob_res)
```

### MR - model 5

Model 5 investigated the retention of efficacy over time for different control methods.

```{r}
MR5 <- readRDS(here("Results", "Models", "Coupe", "coupe_MR5.rds"))
MR5_rob <- readRDS(here("Results", "Models", "Coupe", "coupe_MR5_rob.rds"))
imp_MR5 <- readRDS(here("Results", "Models", "Coupe", "imp_coupe_MR5.rds"))
MR5_pb <- readRDS(here("Results", "Models", "Coupe", "coupe_MR5_pb.rds"))
MR5_pb_rob <- readRDS(here("Results", "Models", "Coupe", "coupe_MR5_pb_rob.rds"))
```

```{r}
r2_ml(MR5)
```

```{r}
MR5_res <- mod_extract(MR5)
MR5_pb_res <- mod_extract(MR5_pb)

MR5_rob_res <- rob_mod_extract(MR5_rob) 
MR5_pb_rob_res <- rob_mod_extract(MR5_pb_rob) 

imp_MR5_res <- imp_mod_extract(imp_MR5)
```

Build tables

```{r}
MR5_flex <- build_tab(MR5_res, MR5_rob_res, imp_MR5_res)
MR5_pb_flex <- build_tab_pb(MR5_pb_res, MR5_pb_rob_res)
```

### Save the document

```{r}
save_as_docx("Coupe Scale Multilevel Meta-analytic model (MLMA)" = MMA_flex, "Coupe Scale MMA publication bias" = MMA_pb_flex, "Coupe Scale Meta-regression (MR) - suppressed intercept, control method" = MR2_flex, "Coupe Scale MR - suppressed intercept, control method publication bias" = MR2_pb_flex, "Coupe Scale MR - suppressed intercept, browsing taxa" = MR4_flex, "Coupe Scale MR - suppressed intercept, browsing taxa publication bias" = MR4_pb_flex, "Coupe Scale MR - control method efficacy through time" = MR5_flex, "Coupe Scale MR - control method efficacy through time publication bias" = MR5_pb_flex, path = here("Results", "Tables", "Coupe_scale_summary.docx"))
```

## Landscape scale

### Multilevel meta-analytic model (MMA)

Read in

```{r}
MMA <- readRDS(here("Results", "Models", "Landscape", "lscape_MMA.rds"))
MMA_rob <- readRDS(here("Results", "Models", "Landscape", "lscape_MMA_rob.rds"))
imp_MMA <- readRDS(here("Results", "Models", "Landscape", "imp_lscape_MMA.rds"))
MMA_pb <- readRDS(here("Results", "Models", "Landscape", "lscape_MMA_pb.rds"))
MMA_pb_rob <- readRDS(here("Results", "Models", "Landscape", "lscape_MMA_pb_rob.rds"))
```

Extract the relevant information using above functions.

```{r}
MMA_res <- mod_extract(MMA)
MMA_pb_res <- mod_extract(MMA_pb)

MMA_rob_res <- rob_mod_extract(MMA_rob) 
MMA_pb_rob_res <- rob_mod_extract(MMA_pb_rob) 

imp_MMA_res <- imp_mod_extract(imp_MMA)
```

Build tables

```{r}
MMA_flex <- build_tab(MMA_res, MMA_rob_res, imp_MMA_res)
MMA_pb_flex <- build_tab_pb(MMA_pb_res, MMA_pb_rob_res)
```

### Meta-regression (MR) - model 2

Model 2 is the suppressed intercept model investigating control method efficacy.

```{r}
MR2 <- readRDS(here("Results", "Models", "Landscape", "lscape_MR2.rds"))
MR2_rob <- readRDS(here("Results", "Models", "Landscape", "lscape_MR2_rob.rds"))
imp_MR2 <- readRDS(here("Results", "Models", "Landscape", "imp_lscape_MR2.rds"))
MR2_pb <- readRDS(here("Results", "Models", "Landscape", "lscape_MR2_pb.rds"))
MR2_pb_rob <- readRDS(here("Results", "Models", "Landscape", "lscape_MR2_pb_rob.rds"))
```

```{r}
r2_ml(MR2)
```

```{r}
MR2_res <- mod_extract(MR2)
MR2_pb_res <- mod_extract(MR2_pb)

MR2_rob_res <- rob_mod_extract(MR2_rob) 
MR2_pb_rob_res <- rob_mod_extract(MR2_pb_rob) 

imp_MR2_res <- imp_mod_extract(imp_MR2)
```

Build tables

```{r}
MR2_flex <- build_tab(MR2_res, MR2_rob_res, imp_MR2_res)
MR2_pb_flex <- build_tab_pb(MR2_pb_res, MR2_pb_rob_res)
```

### MR - model 4

Model 4 is the suppressed intercept model investigating control of different browsing taxa

```{r}
MR4 <- readRDS(here("Results", "Models", "Landscape", "lscape_MR4.rds"))
MR4_rob <- readRDS(here("Results", "Models", "Landscape", "lscape_MR4_rob.rds"))
imp_MR4 <- readRDS(here("Results", "Models", "Landscape", "imp_lscape_MR4.rds"))
MR4_pb <- readRDS(here("Results", "Models", "Landscape", "lscape_MR4_pb.rds"))
MR4_pb_rob <- readRDS(here("Results", "Models", "Landscape", "lscape_MR4_pb_rob.rds"))
```

```{r}
r2_ml(MR4)
```

```{r}
MR4_res <- mod_extract(MR4)
MR4_pb_res <- mod_extract(MR4_pb)

MR4_rob_res <- rob_mod_extract(MR4_rob) 
MR4_pb_rob_res <- rob_mod_extract(MR4_pb_rob) 

imp_MR4_res <- imp_mod_extract(imp_MR4)
```

Build tables

```{r}
MR4_flex <- build_tab(MR4_res, MR4_rob_res, imp_MR4_res)
MR4_pb_flex <- build_tab_pb(MR4_pb_res, MR4_pb_rob_res)
```

### MR - model 5

Model 5 investigated the retention of efficacy over time for different control methods.

```{r}
MR5 <- readRDS(here("Results", "Models", "Landscape", "lscape_MR5.rds"))
MR5_rob <- readRDS(here("Results", "Models", "Landscape", "lscape_MR5_rob.rds"))
imp_MR5 <- readRDS(here("Results", "Models", "Landscape", "imp_lscape_MR5.rds"))
MR5_pb <- readRDS(here("Results", "Models", "Landscape", "lscape_MR5_pb.rds"))
MR5_pb_rob <- readRDS(here("Results", "Models", "Landscape", "lscape_MR5_pb_rob.rds"))
```

```{r}
r2_ml(MR5)
```

```{r}
MR5_res <- mod_extract(MR5)
MR5_pb_res <- mod_extract(MR5_pb)

MR5_rob_res <- rob_mod_extract(MR5_rob) 
MR5_pb_rob_res <- rob_mod_extract(MR5_pb_rob) 

imp_MR5_res <- imp_mod_extract(imp_MR5)
```

Build tables - need to pad MR5_res and MR5_rob_res due to the imputed case having an extra control method included creating an imbalance in the number of rows of the different objects.

```{r}
pad <- function(df) {
  dftop <- df[1:2,]
  dfmid <- df[3:7,]
  dfbot <- df[8:9,]
  
  df_fill1 <- tibble(term = "MethodNeighbour effects", est = NA, ci.lb = NA, ci.ub = NA, se = NA, stat = NA, p.val = NA)
  df_fill2 <- tibble(term = "MethodNeighbour effects:Months", est = NA, ci.lb = NA, ci.ub = NA, se = NA, stat = NA, p.val = NA)
  
  df_done <- rbind(dftop, df_fill1, dfmid, df_fill2, dfbot)
  
  return(df_done) }

pad_rob <- function(df) {
  dftop <- df[1:2,]
  dfmid <- df[3:7,]
  dfbot <- df[8:9,]
  
  df_fill1 <- tibble(rob_term = "MethodNeighbour effects", rob_est = NA, rob_ci.lb = NA, rob_ci.ub = NA, rob_se = NA, rob_stat = NA, rob_p.val = NA)
  df_fill2 <- tibble(rob_term = "MethodNeighbour effects:Months", rob_est = NA, rob_ci.lb = NA, rob_ci.ub = NA, rob_se = NA, rob_stat = NA, rob_p.val = NA)
  
  df_done <- rbind(dftop, df_fill1, dfmid, df_fill2, dfbot)
  
  return(df_done) }
```

```{r}
MR5_res1 <- pad(MR5_res)
MR5_rob_res1 <- pad_rob(MR5_rob_res)
```

```{r}
MR5_flex <- build_tab(MR5_res1, MR5_rob_res1, imp_MR5_res)
MR5_pb_flex <- build_tab_pb(MR5_pb_res, MR5_pb_rob_res)
```

### Save the document

```{r}
save_as_docx("Landscape Scale Multilevel Meta-analytic model (MLMA)" = MMA_flex, "Landscape Scale MMA publication bias" = MMA_pb_flex, "Landscape Scale Meta-regression (MR) - suppressed intercept, control method" = MR2_flex, "Landscape Scale MR - suppressed intercept, control method publication bias" = MR2_pb_flex, "Landscape Scale MR - suppressed intercept, browsing taxa" = MR4_flex, "Landscape Scale MR - suppresed intercept, browsing taxa publication bias" = MR4_pb_flex, "Landscape Scale MR - control method efficacy through time" = MR5_flex, "Landscape Scale MR - control method efficacy through time publication bias" = MR5_pb_flex, path = here("Results", "Tables", "Landscape_scale_summary.docx"))
```

## Heterogeneity tables

```{r}
build_het_table <- function(df1, df2 ,df3){
  # shorten row names to remove the name of the test
  rownames(df1) <- substring(rownames(df1), 4)
  rownames(df2) <- substring(rownames(df2), 4)
  rownames(df3) <- substring(rownames(df3), 4)
  
  # change column names so that it is only the name of the test
  colnames(df1) <- "I2"
  colnames(df2) <- "CV"
  colnames(df3) <- "M"
  
  # combine the 3 tests into a single dataframe
  df4 <- cbind(df1, df2, df3)
  
  df5 <- as.data.frame(t(df4))
  
  df6 <- df5 %>%  mutate(Test = rownames(df5), Cohort_ID = Repeat_measures) %>% dplyr::select(Test, Total, Paper_ID, Cohort_ID, Plant_genus, OLRE)
  
  # make a table for manuscript
  flex <- flextable(df6) %>%
    align(align = "center", part = "all") %>% 
    padding(., padding.left = 0, padding.right = 0) %>% 
    colformat_double(., digits = 5) %>% 
    autofit(.) # edit this one to add in extra header rows and generally neaten up
  
  return(flex)
}
```

### Plant scale

```{r}
MMA <- readRDS(here("Results", "Models", "Plant", "Plant_MMA.rds"))
```

```{r}
i2 <- as.data.frame(orchaRd::i2_ml(MMA))

cv <- as.data.frame(orchaRd::cv_ml(MMA))

m1 <- as.data.frame(orchaRd::m1_ml(MMA))
```

```{r}
plant_het_table <- build_het_table(i2, cv, m1)
```

### Coupe scale

```{r}
MMA <- readRDS(here("Results", "Models", "Coupe", "coupe_MMA.rds"))
```

```{r}
i2 <- as.data.frame(orchaRd::i2_ml(MMA))

cv <- as.data.frame(orchaRd::cv_ml(MMA))

m1 <- as.data.frame(orchaRd::m1_ml(MMA))
```

```{r}
Coupe_het_table <- build_het_table(i2, cv, m1)
```

### Landscape scale

```{r}
MMA <- readRDS(here("Results", "Models", "Landscape", "lscape_MMA.rds"))
```

```{r}
i2 <- as.data.frame(orchaRd::i2_ml(MMA))

cv <- as.data.frame(orchaRd::cv_ml(MMA))

m1 <- as.data.frame(orchaRd::m1_ml(MMA))
```

```{r}
Landscape_het_table <- build_het_table(i2, cv, m1)
```

### Save document

```{r}
save_as_docx("Supplementary Table 25 - Plant Scale MLMA Heterogeneity" = plant_het_table, "Supplementary Table 26 - Coupe Scale MLMA Heterogeneity" = Coupe_het_table, "Supplementary Table 27 - Landscape Scale MLMA Heterogeneity" = Landscape_het_table, path = here("Results", "Tables", "Heterogeneity_tables.docx"))
```

